services:
  portainer:
    image: portainer/portainer-ce:2.20.1-alpine
    container_name: portainer
    restart: always
    ports:
      - "8000:8000"
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer_data:/data
  pihole:
    container_name: pihole
    image: pihole/pihole:2024.03.2
    env_file: .env
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "80:80/tcp"
    environment:
      TZ: 'America/Bogota'
      WEBPASSWORD: ${PIHOLE_WEBPASSWORD}
    volumes:
      - './etc-pihole:/etc/pihole'
      - './etc-dnsmasq.d:/etc/dnsmasq.d'
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
  duckdns:
    container_name: duckdns
    build:
      context: .
      dockerfile: duckdns.Dockerfile
      args:
        DUCKDNS_TOKEN: ${DUCKDNS_TOKEN}
    env_file: .env
  speedtest-tracker:
    container_name: speedtest-tracker
    image: lscr.io/linuxserver/speedtest-tracker:latest
    ports:
      - "4500:80"
    env_file: .env
    restart: unless-stopped
    volumes:
      - $HOME/.local/orangepi/speedtest-config:/config
  postgres-db:
    container_name: postgres-db
    image: postgres:15.6-bookworm
    env_file: .env
    restart: always
    volumes:
      - $HOME/.local/orangepi/postgres-db:/var/lib/postgresql/data
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:8.5
    ports:
      - "5500:80"
    env_file: .env
    restart: always
volumes:
  portainer_data:
